---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import staticPages from '../../data/staticPages.json';

export async function getStaticPaths() {
  const paths = [];
  
  // Generate paths for each page and language
  Object.keys(staticPages).forEach(slug => {
    // Welsh paths (no lang prefix)
    paths.push({
      params: { lang: 'cy', slug },
      props: { 
        pageData: staticPages[slug].cy,
        currentLang: 'cy',
        slug
      }
    });
    
    // English paths (with 'en' prefix)
    paths.push({
      params: { lang: 'en', slug },
      props: { 
        pageData: staticPages[slug].en,
        currentLang: 'en',
        slug
      }
    });
  });
  
  return paths;
}

const { pageData, currentLang, slug } = Astro.props;
const base = import.meta.env.BASE_URL;
---

<Layout title={pageData.pageTitle} description={pageData.pageDescription} lang={currentLang}>
  <Header currentLang={currentLang} />
  
  <main class="flex-1 max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="prose prose-lg max-w-none">
      <h1 class="text-4xl font-bold text-secondary-900 mb-8">{pageData.title}</h1>
      
      <div class="bg-white rounded-lg shadow-md p-8">
        {pageData.sections.map((section) => (
          <div class="mb-6 last:mb-0">
            <h2 class="text-2xl font-semibold text-secondary-900 mb-4">{section.heading}</h2>
            <p class="text-secondary-700 mb-6">{section.content}</p>
            {section.list && (
              <ul class="list-disc list-inside text-secondary-700 mb-6 space-y-2">
                {section.list.map((item) => (
                  <li>{item}</li>
                ))}
              </ul>
            )}
          </div>
        ))}
        
        {/* Downloads page specific content */}
        {slug === 'downloads' && pageData.downloads && (
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
            {pageData.downloads.map((download) => (
              <div class="border border-secondary-200 rounded-lg p-6">
                <h3 class="text-lg font-semibold text-secondary-900 mb-2">{download.title}</h3>
                <p class="text-secondary-600 text-sm mb-4">{download.description}</p>
                {download.available ? (
                  <a 
                    href={`${base}bardicNames.json`}
                    download="bardicNames.json"
                    class="inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors"
                  >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                    </svg>
                    {download.buttonText}
                  </a>
                ) : (
                  <button 
                    class="inline-flex items-center px-4 py-2 bg-secondary-400 text-white rounded-md cursor-not-allowed"
                    disabled
                  >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                    </svg>
                    {download.buttonText}
                  </button>
                )}
              </div>
            ))}
          </div>
        )}
        
        {/* License section for downloads page */}
        {slug === 'downloads' && pageData.license && (
          <div class="bg-primary-50 border border-primary-200 rounded-lg p-6">
            <h3 class="text-lg font-semibold text-primary-900 mb-2">{pageData.license.heading}</h3>
            <p class="text-primary-800 text-sm">{pageData.license.content}</p>
          </div>
        )}
      </div>
    </div>
  </main>
  
  <Footer currentLang={currentLang} />
</Layout>