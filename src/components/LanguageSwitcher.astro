---
export interface Props {
  currentLang: 'cy' | 'en';
}

const { currentLang } = Astro.props;
let { pathname } = Astro.url;

let base = import.meta.env.BASE_URL; 
// make sure it ends with a slash
if (!base.endsWith('/')) base = base + '/';

// remove `base` from the front of the pathname
if (pathname.startsWith(base)) {
  pathname = pathname.slice(base.length);
}

// remove any leading slash
pathname = pathname.replace(/^\/+/, '');

function getAlternateUrl(targetLang: 'cy' | 'en') {
  let remainder = pathname;

  if (targetLang === 'cy') {
    // Converting from English to Welsh
    if (remainder.startsWith('en/')) {
      remainder = remainder.slice(3); // Remove 'en/'
      
      // Handle dynamic route translation: 'bard/' -> 'bardd/'
      if (remainder.startsWith('bard/')) {
        remainder = remainder.replace('bard/', 'bardd/');
      }
      
      // Handle static page routes: 'about' -> 'cy/about', 'downloads' -> 'cy/downloads'
      if (remainder === 'about' || remainder === 'downloads') {
        remainder = `cy/${remainder}`;
      }
    }
    return base + remainder;
  } else {
    // Converting from Welsh to English
    // Handle static page routes: 'cy/about' -> 'en/about', 'cy/downloads' -> 'en/downloads'
    if (remainder.startsWith('cy/')) {
      remainder = remainder.replace('cy/', 'en/');
      return base + remainder;
    }
    
    // Handle dynamic route translation: 'bardd/' -> 'bard/'
    if (remainder.startsWith('bardd/')) {
      remainder = remainder.replace('bardd/', 'bard/');
    }
    
    return base + 'en/' + remainder;
  }
}
---

<div class="flex items-center space-x-2">
  <a
    href={getAlternateUrl('cy')}
    class={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${
      currentLang === 'cy' 
        ? 'bg-primary-600 text-white' 
        : 'text-secondary-600 hover:text-primary-600 hover:bg-primary-50'
    }`}
  >
    Cymraeg
  </a>
  <a
    href={getAlternateUrl('en')}
    class={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${
      currentLang === 'en' 
        ? 'bg-primary-600 text-white' 
        : 'text-secondary-600 hover:text-primary-600 hover:bg-primary-50'
    }`}
  >
    English
  </a>
</div>