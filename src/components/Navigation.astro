---
import { useTranslations } from '../i18n/ui';

interface Props {
  locale: 'cy' | 'en';
}

const { locale } = Astro.props;
const t = useTranslations(locale);

const currentPath = Astro.url.pathname;

// Helper function to get localized path
function getLocalizedPath(path: string, targetLocale: 'cy' | 'en') {
  if (targetLocale === 'cy') {
    return path.replace('/en/', '/').replace('/data-bardic/en', '/data-bardic');
  } else {
    if (path === '/data-bardic/' || path === '/data-bardic') {
      return '/data-bardic/en/';
    }
    return path.replace('/data-bardic/', '/data-bardic/en/');
  }
}

const links = [
  { 
    href: locale === 'cy' ? '/data-bardic/' : '/data-bardic/en/', 
    text: t('nav.home') 
  },
  { 
    href: locale === 'cy' ? '/data-bardic/data' : '/data-bardic/en/data', 
    text: t('nav.data') 
  },
  { 
    href: locale === 'cy' ? '/data-bardic/about' : '/data-bardic/en/about', 
    text: t('nav.about') 
  }
];
---
<nav class="bg-white shadow-md mb-8">
  <div class="max-w-7xl mx-auto px-4">
    <div class="flex justify-between h-16">
      <div class="flex">
        <div class="flex-shrink-0 flex items-center">
          <span class="text-xl font-bold text-red-600">{t('nav.brand')}</span>
        </div>
        <div class="hidden sm:ml-6 sm:flex sm:space-x-8">
          {links.map(link => (
            <a
              href={link.href}
              class={`inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium ${
                currentPath === link.href
                  ? 'border-red-600 text-gray-900'
                  : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700'
              }`}
            >
              {link.text}
            </a>
          ))}
        </div>
      </div>
      
      <!-- Language Switcher -->
      <div class="hidden sm:flex sm:items-center sm:space-x-2">
        <a
          href={getLocalizedPath(currentPath, 'cy')}
          class={`px-3 py-1 text-sm font-medium rounded ${
            locale === 'cy'
              ? 'bg-red-600 text-white'
              : 'text-gray-500 hover:text-gray-700'
          }`}
        >
          CY
        </a>
        <a
          href={getLocalizedPath(currentPath, 'en')}
          class={`px-3 py-1 text-sm font-medium rounded ${
            locale === 'en'
              ? 'bg-red-600 text-white'
              : 'text-gray-500 hover:text-gray-700'
          }`}
        >
          EN
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="sm:hidden flex items-center">
        <button
          type="button"
          class="mobile-menu-button inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <svg class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div class="sm:hidden hidden" id="mobile-menu">
    <div class="pt-2 pb-3 space-y-1">
      {links.map(link => (
        <a
          href={link.href}
          class={`block pl-3 pr-4 py-2 border-l-4 text-base font-medium ${
            currentPath === link.href
              ? 'bg-red-50 border-red-600 text-red-700'
              : 'border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700'
          }`}
        >
          {link.text}
        </a>
      ))}
      
      <!-- Mobile Language Switcher -->
      <div class="border-t border-gray-200 pt-4 pb-3">
        <div class="flex items-center px-4 space-x-2">
          <span class="text-sm font-medium text-gray-500">Language:</span>
          <a
            href={getLocalizedPath(currentPath, 'cy')}
            class={`px-3 py-1 text-sm font-medium rounded ${
              locale === 'cy'
                ? 'bg-red-600 text-white'
                : 'text-gray-500 hover:text-gray-700'
            }`}
          >
            CY
          </a>
          <a
            href={getLocalizedPath(currentPath, 'en')}
            class={`px-3 py-1 text-sm font-medium rounded ${
              locale === 'en'
                ? 'bg-red-600 text-white'
                : 'text-gray-500 hover:text-gray-700'
            }`}
          >
            EN
          </a>
        </div>
      </div>
    </div>
  </div>
</nav>

<script>
  const mobileMenuButton = document.querySelector('.mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });
</script>